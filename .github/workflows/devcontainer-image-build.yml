name: devcontainerイメージ自動ビルド

on:
  push:
    branches: [main]
    paths:
      - 'devcontainers/**'
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]
    paths:
      - 'devcontainers/**'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check-changes:
    name: 差分チェック
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.filter.outputs.changed }}
    steps:
      - name: コードチェックアウト
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: main取得
        run: git fetch origin main

      - name: devcontainers配下の差分判定
        id: filter
        run: |
          if git diff --name-only origin/main...HEAD | grep -q '^devcontainers/'; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "[INFO] devcontainers配下に差分あり"
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "[INFO] devcontainers配下に差分なし"
          fi

  detect-devcontainers:
    name: devcontainerディレクトリ検出
    needs: check-changes
    if: needs.check-changes.outputs.changed == 'true'
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: コードチェックアウト
        uses: actions/checkout@v4

      - name: devcontainerディレクトリ検出
        id: set-matrix
        run: |
          set -e
          echo "[INFO] devcontainerディレクトリ検出開始"
          dirs=$(find devcontainers -mindepth 1 -maxdepth 1 -type d -exec test -f '{}/devcontainer.json' \; -print | sort)
          if [ -z "$dirs" ]; then
            echo "[WARNING] devcontainerディレクトリ未検出"
            echo "matrix=[]" >> $GITHUB_OUTPUT
          else
            echo "[INFO] devcontainerディレクトリ検出完了: $dirs"
            # jq -c で1行のJSON配列に
            json=$(printf '%s\n' $dirs | jq -R . | jq -cs .)
            echo "matrix=${json}" >> $GITHUB_OUTPUT
          fi
          
  build-and-push:
    name: devcontainerイメージビルド・プッシュ
    needs: detect-devcontainers
    if: needs.detect-devcontainers.outputs.matrix != '[]'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        dir: ${{ fromJson(needs.detect-devcontainers.outputs.matrix) }}
    permissions:
      contents: read
      packages: write
    steps:
      - name: コードチェックアウト
        uses: actions/checkout@v4

      - name: QEMUセットアップ
        uses: docker/setup-qemu-action@v3

      - name: Buildxセットアップ
        uses: docker/setup-buildx-action@v3

      - name: Dockerログイン
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: イメージ名・タグ生成
        id: meta
        run: |
          set -e
          echo "[INFO] イメージ名・タグ生成開始"
          DIR="${{ matrix.dir }}"
          NAME=$(basename "$DIR")
          REPO="ghcr.io/${{ github.repository_owner }}/common"
          if [[ "${{ github.event_name }}" == "push" ]]; then
            TAGS="devcontainer-${NAME}-latest devcontainer-${NAME}-$(date +%Y%m%d%H%M%S)"
          else
            TAGS="devcontainer-${NAME}-pre"
          fi
          echo "repo=$REPO" >> $GITHUB_OUTPUT
          echo "tags=$TAGS" >> $GITHUB_OUTPUT
          echo "name=$NAME" >> $GITHUB_OUTPUT
          echo "[INFO] イメージ名・タグ生成完了: $TAGS"

      - name: devcontainers/ciによるビルド・プッシュ
        uses: devcontainers/ci@v0.3
        with:
          subFolder: ${{ matrix.dir }}
          imageName: ${{ steps.meta.outputs.repo }}
          imageTag: ${{ steps.meta.outputs.tags }}
          platform: linux/amd64,linux/arm64
          push: always
